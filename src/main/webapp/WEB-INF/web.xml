<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         id="WebApp_ID" version="3.0">
    <display-name>p2p</display-name>
    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
        <welcome-file>index.htm</welcome-file>
        <welcome-file>index.jsp</welcome-file>
        <welcome-file>default.html</welcome-file>
        <welcome-file>default.htm</welcome-file>
        <welcome-file>default.jsp</welcome-file>
    </welcome-file-list>
    <session-config>
        <session-timeout>20</session-timeout>
        <cookie-config>
            <path>/</path>
            <http-only>false</http-only>
        </cookie-config>
    </session-config>
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>

    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>
    <listener>
        <listener-class>com.kingray.ContextLoaderListener</listener-class>
    </listener>

    <!-- 用户session监听 -->
    <listener>
        <listener-class>com.kingray.session.UserSessionListener</listener-class>
    </listener>

    <!-- springMVC 配置 -->
    <servlet>
        <description>spring mvc servlet</description>
        <servlet-name>springMvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <description>spring mvc 配置文件</description>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:applicationContext-servlet.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <!-- 拦截以*为后缀的请求 -->
    <servlet-mapping>
        <servlet-name>springMvc</servlet-name>
        <!--<url-pattern>/*</url-pattern>-->
        <url-pattern>*.html</url-pattern>
    </servlet-mapping>


    <!--配置同源策略
    <filter>
        <filter-name>CORS</filter-name>
        <filter-class>com.thetransactioncompany.cors.CORSFilter</filter-class>
        <init-param>
            <param-name>cors.allowOrigin</param-name>
            <param-value>http://10.188.199.8:27081 http://forml.me:27081  http://szkingray.3322.org:27081 http://127.0.0.1:8080 http://10.188.199.8:27083</param-value>
        </init-param>
        <init-param>
            <param-name>cors.supportedMethods</param-name>
            <param-value>GET, POST, HEAD, PUT, DELETE</param-value>
        </init-param>
        <init-param>
            <param-name>cors.supportedHeaders</param-name>
            <param-value>Accept, Origin, X-Requested-With, Content-Type, Last-Modified</param-value>
        </init-param>
        <init-param>
            <param-name>cors.exposedHeaders</param-name>
            <param-value>Set-Cookie</param-value>
        </init-param>
        <init-param>
            <param-name>cors.supportsCredentials</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CORS</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
     -->

    <!-- 解码过滤器 -->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 解决Rest请求的PUT方法有些容器无法解析的问题 -->
    <filter>
        <filter-name>restPutMethodFilter</filter-name>
        <filter-class>com.kingray.filter.HttpPutMethodFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>restPutMethodFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- CORS -->
    <filter>
        <filter-name>corsFilter</filter-name>
        <filter-class>com.kingray.filter.ResponseCorsFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>corsFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- 跨域json解决方案 -->
    <filter>
        <filter-name>jsoncallbackFilter</filter-name>
        <filter-class>com.kingray.filter.JSONCallBackFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>callbackName</param-name>
            <param-value>callback</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>jsoncallbackFilter</filter-name>
        <url-pattern>*.html</url-pattern>
    </filter-mapping>

    <!-- 捕获上下文对象并放入到 当前线程内 （用spring的Interceptor代替，方便测试）  -->
    <!--<filter>
        <filter-name>webContextFilter</filter-name>
        <filter-class>com.kingray.filter.WebContextFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>webContextFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>-->


    <!--登录过滤器
    <filter>
        <filter-name>loginFilter</filter-name>
        <filter-class>com.kingray.filter.LoginFilter</filter-class>
        <init-param>
            <description>静态文件存放文件夹路径</description>
            <param-name>resourcePath</param-name>
            <param-value>/api</param-value>
        </init-param>
        <init-param>
            <description>用户登陆请求路径</description>
            <param-name>loginPath</param-name>
            <param-value>/login/doLogin</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>loginFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    -->


    <!--权限过滤器(Spring代理)
    <filter>
        <filter-name>delegatingPermissionFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <param-name>targetBeanName</param-name>
            <param-value>permissionFilter</param-value>
            <description>所在Spring的BeanName</description>
        </init-param>
        <init-param>
            <param-name>pageIdOfCookieName</param-name>
            <param-value>PAGE_ID</param-value>
            <description>Cookie内存储当前页面Id的键名</description>
        </init-param>
        <init-param>
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
            <description>调用init与destroy方法</description>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>delegatingPermissionFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    -->


    <!-- 控制器访问日志过滤器 -->
    <filter>
        <filter-name>controllerLogFilter</filter-name>
        <filter-class>com.kingray.filter.ControllerLogFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>controllerLogFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 修改spring管理session的边界，变为以request边界的事务处理，但是这样会有效率问题 -->
    <filter>
        <filter-name>hibernateFilter</filter-name>
        <filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
        <init-param>
            <param-name>sessionFactoryBeanName</param-name>
            <param-value>sessionFactory</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>hibernateFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>requestContextFilter</filter-name>
        <filter-class>org.springframework.web.filter.RequestContextFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>requestContextFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 配置字符转码过滤器 <filter> <filter-name>charsetFilter</filter-name> <filter-class>com.kingray.filter.CharsetFilter</filter-class>
        <init-param> <param-name>encoding</param-name> <param-value>utf-8</param-value>
        </init-param> </filter> <filter-mapping> <filter-name>charsetFilter</filter-name>
        <url-pattern>/*</url-pattern> </filter-mapping> -->

</web-app>